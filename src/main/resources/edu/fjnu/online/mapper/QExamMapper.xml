<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.fjnu.online.mapper.QExamMapper">
  <resultMap id="BaseResultMap" type="edu.fjnu.online.bean.QExam">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="reading_section_id" jdbcType="INTEGER" property="readingSectionId" />
    <result column="listening_section_id" jdbcType="INTEGER" property="listeningSectionId" />
    <result column="speaking_section_id" jdbcType="INTEGER" property="speakingSectionId" />
    <result column="writing_section_id" jdbcType="INTEGER" property="writingSectionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="reamrk" jdbcType="VARCHAR" property="reamrk" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, reading_section_id, listening_section_id, speaking_section_id, writing_section_id, 
    create_time, reamrk
  </sql>
  <select id="selectByExample" parameterType="edu.fjnu.online.bean.QExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from q_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from q_exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from q_exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.fjnu.online.bean.QExamExample">
    delete from q_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.fjnu.online.bean.QExam">
    insert into q_exam (id, name, reading_section_id, 
      listening_section_id, speaking_section_id, 
      writing_section_id, create_time, reamrk
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{readingSectionId,jdbcType=INTEGER}, 
      #{listeningSectionId,jdbcType=INTEGER}, #{speakingSectionId,jdbcType=INTEGER}, 
      #{writingSectionId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{reamrk,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertAndGetId" parameterType="edu.fjnu.online.bean.QExam" useGeneratedKeys="true" keyProperty="id">
    insert into q_exam (id, name, reading_section_id,
      listening_section_id, speaking_section_id,
      writing_section_id, create_time, reamrk
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{readingSectionId,jdbcType=INTEGER},
      #{listeningSectionId,jdbcType=INTEGER}, #{speakingSectionId,jdbcType=INTEGER},
      #{writingSectionId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{reamrk,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="edu.fjnu.online.bean.QExam">
    insert into q_exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="readingSectionId != null">
        reading_section_id,
      </if>
      <if test="listeningSectionId != null">
        listening_section_id,
      </if>
      <if test="speakingSectionId != null">
        speaking_section_id,
      </if>
      <if test="writingSectionId != null">
        writing_section_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="reamrk != null">
        reamrk,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="readingSectionId != null">
        #{readingSectionId,jdbcType=INTEGER},
      </if>
      <if test="listeningSectionId != null">
        #{listeningSectionId,jdbcType=INTEGER},
      </if>
      <if test="speakingSectionId != null">
        #{speakingSectionId,jdbcType=INTEGER},
      </if>
      <if test="writingSectionId != null">
        #{writingSectionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reamrk != null">
        #{reamrk,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.fjnu.online.bean.QExamExample" resultType="java.lang.Long">
    select count(*) from q_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update q_exam
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.readingSectionId != null">
        reading_section_id = #{record.readingSectionId,jdbcType=INTEGER},
      </if>
      <if test="record.listeningSectionId != null">
        listening_section_id = #{record.listeningSectionId,jdbcType=INTEGER},
      </if>
      <if test="record.speakingSectionId != null">
        speaking_section_id = #{record.speakingSectionId,jdbcType=INTEGER},
      </if>
      <if test="record.writingSectionId != null">
        writing_section_id = #{record.writingSectionId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reamrk != null">
        reamrk = #{record.reamrk,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update q_exam
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      reading_section_id = #{record.readingSectionId,jdbcType=INTEGER},
      listening_section_id = #{record.listeningSectionId,jdbcType=INTEGER},
      speaking_section_id = #{record.speakingSectionId,jdbcType=INTEGER},
      writing_section_id = #{record.writingSectionId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      reamrk = #{record.reamrk,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.fjnu.online.bean.QExam">
    update q_exam
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="readingSectionId != null">
        reading_section_id = #{readingSectionId,jdbcType=INTEGER},
      </if>
      <if test="listeningSectionId != null">
        listening_section_id = #{listeningSectionId,jdbcType=INTEGER},
      </if>
      <if test="speakingSectionId != null">
        speaking_section_id = #{speakingSectionId,jdbcType=INTEGER},
      </if>
      <if test="writingSectionId != null">
        writing_section_id = #{writingSectionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reamrk != null">
        reamrk = #{reamrk,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.fjnu.online.bean.QExam">
    update q_exam
    set name = #{name,jdbcType=VARCHAR},
      reading_section_id = #{readingSectionId,jdbcType=INTEGER},
      listening_section_id = #{listeningSectionId,jdbcType=INTEGER},
      speaking_section_id = #{speakingSectionId,jdbcType=INTEGER},
      writing_section_id = #{writingSectionId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      reamrk = #{reamrk,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>