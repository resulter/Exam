<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auto.mapper.RRecordWritingMapper">
  <resultMap id="BaseResultMap" type="com.auto.bean.RRecordWriting">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="word_count" jdbcType="INTEGER" property="wordCount" />
    <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="time_str" jdbcType="VARCHAR" property="timeStr" />
    <result column="score" jdbcType="REAL" property="score" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.auto.bean.RRecordWritingWithBLOBs">
    <result column="answer" jdbcType="LONGVARCHAR" property="answer" />
    <result column="annotation" jdbcType="LONGVARCHAR" property="annotation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, exam_id, subject_id, word_count, submit_time, start_time, time_str, 
    score, remark
  </sql>
  <sql id="Blob_Column_List">
    answer, annotation
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.auto.bean.RRecordWritingExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from r_record_writing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.auto.bean.RRecordWritingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from r_record_writing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from r_record_writing
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from r_record_writing
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.auto.bean.RRecordWritingExample">
    delete from r_record_writing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.auto.bean.RRecordWritingWithBLOBs">
    insert into r_record_writing (id, user_id, exam_id, 
      subject_id, word_count, submit_time, 
      start_time, time_str, score, 
      remark, answer, annotation
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{examId,jdbcType=INTEGER}, 
      #{subjectId,jdbcType=INTEGER}, #{wordCount,jdbcType=INTEGER}, #{submitTime,jdbcType=TIMESTAMP}, 
      #{startTime,jdbcType=TIMESTAMP}, #{timeStr,jdbcType=VARCHAR}, #{score,jdbcType=REAL}, 
      #{remark,jdbcType=VARCHAR}, #{answer,jdbcType=LONGVARCHAR}, #{annotation,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.auto.bean.RRecordWritingWithBLOBs">
    insert into r_record_writing
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="examId != null">
        exam_id,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="wordCount != null">
        word_count,
      </if>
      <if test="submitTime != null">
        submit_time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="timeStr != null">
        time_str,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="annotation != null">
        annotation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="wordCount != null">
        #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null">
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeStr != null">
        #{timeStr,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=REAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="annotation != null">
        #{annotation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.auto.bean.RRecordWritingExample" resultType="java.lang.Long">
    select count(*) from r_record_writing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update r_record_writing
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.wordCount != null">
        word_count = #{record.wordCount,jdbcType=INTEGER},
      </if>
      <if test="record.submitTime != null">
        submit_time = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.timeStr != null">
        time_str = #{record.timeStr,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=REAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.annotation != null">
        annotation = #{record.annotation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update r_record_writing
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      exam_id = #{record.examId,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      word_count = #{record.wordCount,jdbcType=INTEGER},
      submit_time = #{record.submitTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      time_str = #{record.timeStr,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=REAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=LONGVARCHAR},
      annotation = #{record.annotation,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update r_record_writing
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      exam_id = #{record.examId,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      word_count = #{record.wordCount,jdbcType=INTEGER},
      submit_time = #{record.submitTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      time_str = #{record.timeStr,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=REAL},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.auto.bean.RRecordWritingWithBLOBs">
    update r_record_writing
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="wordCount != null">
        word_count = #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null">
        submit_time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeStr != null">
        time_str = #{timeStr,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=REAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="annotation != null">
        annotation = #{annotation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.auto.bean.RRecordWritingWithBLOBs">
    update r_record_writing
    set user_id = #{userId,jdbcType=VARCHAR},
      exam_id = #{examId,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      word_count = #{wordCount,jdbcType=INTEGER},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      time_str = #{timeStr,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=LONGVARCHAR},
      annotation = #{annotation,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.auto.bean.RRecordWriting">
    update r_record_writing
    set user_id = #{userId,jdbcType=VARCHAR},
      exam_id = #{examId,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      word_count = #{wordCount,jdbcType=INTEGER},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      time_str = #{timeStr,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>